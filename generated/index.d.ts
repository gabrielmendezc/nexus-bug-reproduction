/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as ctx from "../types"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ArtistOrderByInput: { // input type
    banner_id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    birth_city?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    birth_date?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    birth_date_precision?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    blood_type?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    country_of_origin?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    created_at?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    description?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    full_name?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    gender?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    height?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    image_id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    instagram_username?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    korean_stage_name?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    melon_id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    native_name?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    primary_group_id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    stage_name?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    thumbnail?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    twitter_handle?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    updated_at?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    weight?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    youtube_id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
  }
  ArtistWhereUniqueInput: { // input type
    id?: number | null; // Int
    melon_id?: number | null; // Int
  }
  UserOrderByInput: { // input type
    avatar_id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    banned?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    banner_id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    bio?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    created_at?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    discord_user_id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    discord_username?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    email?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    email_verified?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    image?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    locale?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    password_hash?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    slug?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    twitter_user_id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    updated_at?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    username?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: string | null; // String
    slug?: string | null; // String
  }
}

export interface NexusGenEnums {
  OrderByArg: "asc" | "desc"
}

export interface NexusGenRootTypes {
  Artist: { // root type
    stage_name?: string | null; // String
  }
  Query: {};
  User: { // root type
    banned: boolean; // Boolean!
    bio?: string | null; // String
    locale?: string | null; // String
    slug?: string | null; // String
    username: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  ArtistOrderByInput: NexusGenInputs['ArtistOrderByInput'];
  ArtistWhereUniqueInput: NexusGenInputs['ArtistWhereUniqueInput'];
  UserOrderByInput: NexusGenInputs['UserOrderByInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  OrderByArg: NexusGenEnums['OrderByArg'];
}

export interface NexusGenFieldTypes {
  Artist: { // field return type
    stage_name: string | null; // String
  }
  Query: { // field return type
    artist: NexusGenRootTypes['Artist'] | null; // Artist
    artists: NexusGenRootTypes['Artist'][]; // [Artist!]!
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  User: { // field return type
    banned: boolean; // Boolean!
    bio: string | null; // String
    createdAt: any; // DateTime!
    locale: string | null; // String
    profileLink: string; // String!
    slug: string | null; // String
    username: string; // String!
  }
}

export interface NexusGenArgTypes {
  Query: {
    artist: { // args
      where: NexusGenInputs['ArtistWhereUniqueInput']; // ArtistWhereUniqueInput!
    }
    artists: { // args
      cursor?: NexusGenInputs['ArtistWhereUniqueInput'] | null; // ArtistWhereUniqueInput
      orderBy?: NexusGenInputs['ArtistOrderByInput'] | null; // ArtistOrderByInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    user: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    users: { // args
      cursor?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      orderBy?: NexusGenInputs['UserOrderByInput'] | null; // UserOrderByInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Artist" | "Query" | "User";

export type NexusGenInputNames = "ArtistOrderByInput" | "ArtistWhereUniqueInput" | "UserOrderByInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = "OrderByArg";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}