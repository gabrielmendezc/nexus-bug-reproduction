### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Artist {
  stage_name: String
}

input ArtistOrderByInput {
  banner_id: OrderByArg
  birth_city: OrderByArg
  birth_date: OrderByArg
  birth_date_precision: OrderByArg
  blood_type: OrderByArg
  country_of_origin: OrderByArg
  created_at: OrderByArg
  description: OrderByArg
  full_name: OrderByArg
  gender: OrderByArg
  height: OrderByArg
  id: OrderByArg
  image_id: OrderByArg
  instagram_username: OrderByArg
  korean_stage_name: OrderByArg
  melon_id: OrderByArg
  native_name: OrderByArg
  primary_group_id: OrderByArg
  stage_name: OrderByArg
  thumbnail: OrderByArg
  twitter_handle: OrderByArg
  updated_at: OrderByArg
  weight: OrderByArg
  youtube_id: OrderByArg
}

input ArtistWhereUniqueInput {
  id: Int
  melon_id: Int
}

scalar DateTime

enum OrderByArg {
  asc
  desc
}

type Query {
  artist(where: ArtistWhereUniqueInput!): Artist
  artists(cursor: ArtistWhereUniqueInput, orderBy: ArtistOrderByInput, skip: Int, take: Int): [Artist!]!
  user(where: UserWhereUniqueInput!): User
  users(cursor: UserWhereUniqueInput, orderBy: UserOrderByInput, skip: Int, take: Int): [User!]!
}

type User {
  banned: Boolean!
  bio: String
  createdAt: DateTime!
  locale: String
  profileLink: String!
  slug: String
  username: String!
}

input UserOrderByInput {
  avatar_id: OrderByArg
  banned: OrderByArg
  banner_id: OrderByArg
  bio: OrderByArg
  created_at: OrderByArg
  discord_user_id: OrderByArg
  discord_username: OrderByArg
  email: OrderByArg
  email_verified: OrderByArg
  id: OrderByArg
  image: OrderByArg
  locale: OrderByArg
  password_hash: OrderByArg
  slug: OrderByArg
  twitter_user_id: OrderByArg
  updated_at: OrderByArg
  username: OrderByArg
}

input UserWhereUniqueInput {
  email: String
  id: String
  slug: String
}
